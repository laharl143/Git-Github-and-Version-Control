/////////////// Basics
//Install git 

//check git version
$ git --version

//configure username and email
$ git config --global user.name "Erskine Duenas"
$ git config --global user.email "erskine.duenas@gmail.com"

//go to the working directory
$ cd (drag and drop a folder)

//check if you you are in the working directory
$ cd

//make a folder
$ mkdir "hello-world"

//navigate to the "hello-world" folder
$ cd hello-world

//init a new git repo
$ git init

//make a new file ; // echo {nitial content} > {filename.filetype}
$ echo Hello, World! > index.html 

//add items to the staging area 
$ git add index.html
// you can use [$ git add .] to add all

//use git commit to add the files from staging area to local repo
$ git commit -m 'My first commit"

//now that the files are committed, you can delete/modify files and still recover the files using
$ git checkout -- . 



/////////////// Clone Procedure
//- Copy an existing repository from a server to our computer's hard drive.

//first, cd to the folder you want to save the repo
$ cd C:\Users\erskine.duenas\Desktop\Projects

//then use the clone command (git clone + https)
git clone https://github.com/LearnWebCode/travel-site-files.git
//be sure to name the local repository and remote repository with the same name


/////////////// To push local repo to remote repo

//check the origin URL first
$ git remove -
origin  https://github.com/LearnWebCode/travel-site-files.git (fetch)
origin  https://github.com/LearnWebCode/travel-site-files.git (push)

//then set the wanted url
$ git remote set-url origin https://github.com/laharl143/travel-site.git

//then check again if the origin URL is set as desired
$ git remote -v
origin  https://github.com/laharl143/travel-site.git (fetch)
origin  https://github.com/laharl143/travel-site.git (push)

//now we can push local to remote repo
$ git push origin master

/////////////// If you want to make changes in the content

*make changes*

//check the status first
$ git status 
//if there is a red line, it means new line of code has been changed

//use git add . to add the changes
$ git add .

//use again the status
$ git status
//now the red line has been converted to green line, which means the repo is now ready to be committed 

//now proceed to commit
$ git commit -m 'Added new meta keywords.'   //sometimes you need to camelCase the message to push through

//now we can push our repo(local) to the github server(remote)
$ git push origin master

